apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'

  labels:
    app: webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: infra1-dc1-cntrlplane
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: webhook
    app.kubernetes.io/version: v1.8.2
    argocd.argoproj.io/instance: infra1-dc1-cntrlplane
    helm.sh/chart: cert-manager-v1.8.2
  name: cntrlplane-certmanager-webhook
  namespace: core-prod
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: infra1-dc1-cntrlplane
      app.kubernetes.io/name: webhook
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: infra1-dc1-cntrlplane
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.8.2
        helm.sh/chart: cert-manager-v1.8.2
    spec:
      containers:
        - args:
            - '--v=2'
            - '--secure-port=10250'
            - '--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)'
            - '--dynamic-serving-ca-secret-name=cntrlplane-certmanager-webhook-ca'
            - >-
              --dynamic-serving-dns-names=cntrlplane-certmanager-webhook,cntrlplane-certmanager-webhook.core-prod,cntrlplane-certmanager-webhook.core-prod.svc
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: 'quay.io/jetstack/cert-manager-webhook:v1.8.2'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cert-manager
          ports:
            - containerPort: 10250
              name: https
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kubeconfig
          secret:
            defaultMode: 420
            secretName: infra1-dc1-cntrlplane-kubeconfig