{{- if and (eq .Values.installMode "host") (eq .Values.certs.mode "auto") }}
{{- $name := include "karmada.name" . -}}
{{- $namespace := include "karmada.namespace" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}-config
  namespace: {{ $namespace }}
  # annotations:
  #   "helm.sh/hook": pre-install
  #   "helm.sh/hook-weight": "2"
data:
  cert.yaml: |-
    apiVersion: v1
    kind: Secret
    metadata:
      name: {{ $name }}-cert
      namespace: {{ $namespace }}
    type: Opaque
    data:
      server-ca.crt: |-
        {{ print "{{ ca_crt }}" }}
      karmada.crt: |-
        {{ print "{{ crt }}" }}
      karmada.key: |-
        {{ print "{{ key }}" }}
      front-proxy-ca.crt: |-
        {{ print "{{ front_proxy_ca_crt }}" }}
      front-proxy-client.crt: |-
        {{ print "{{ front_proxy_crt }}" }}
      front-proxy-client.key: |-
        {{ print "{{ front_proxy_key }}" }}
  webhook-cert.yaml: |-
    apiVersion: v1
    kind: Secret
    metadata:
      name: {{ $name }}-webhook-cert
      namespace: {{ $namespace }}
    type: kubernetes.io/tls
    data:
      tls.crt: |-
        {{ print "{{ crt }}" }}
      tls.key: |-
        {{ print "{{ key }}" }}
  kubeconfig.yaml: |-
    apiVersion: v1
    kind: Secret
    metadata:
      name: {{ $name }}-kubeconfig
      namespace: {{ $namespace }}
    stringData:
      kubeconfig: |-
        apiVersion: v1
        kind: Config
        clusters:
          - cluster:
              certificate-authority-data: {{ print "{{ ca_crt }}" }}
              insecure-skip-tls-verify: false
              server: https://{{ $name }}-apiserver.{{ $namespace }}.svc.{{ .Values.clusterDomain }}:5443
            name: {{ $name }}-apiserver
        users:
          - user:
              client-certificate-data: {{ print "{{ crt }}" }}
              client-key-data: {{ print "{{ key }}" }}
            name: {{ $name }}-apiserver
        contexts:
          - context:
              cluster: {{ $name }}-apiserver
              user: {{ $name }}-apiserver
            name: {{ $name }}-apiserver
        current-context: {{ $name }}-apiserver
  static-resources-configmaps.yaml: |-
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: {{ $name }}-static-resources
      namespace: {{ $namespace }}
    data:
      {{- print "webhook-configuration.yaml: " | nindent 6 }} |-
        {{- include "karmada.webhook.configuration" . | nindent 8 }}
      {{- print "system-namespace.yaml: " | nindent 6 }} |-
        {{- include "karmada.systemNamespace" . | nindent 8 }}
      {{- print "karmada-aggregated-apiserver-apiservice.yaml: " | nindent 6 }} |-
        {{- include "karmada.apiservice" . | nindent 8 }}
      {{- print "cluster-proxy-admin-rbac.yaml: " | nindent 6 }} |-
        {{- include "karmada.proxyRbac" . | nindent 8 }}
  crds-configmaps.yaml: |-
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: {{ $name }}-crds
      namespace: {{ $namespace }}
    data:
      {{ range $path, $bytes := .Files.Glob (printf "_crds/**")}}
      {{ $name := base $path }}
      {{- (printf "%s: " $name) | nindent 6 }} |-
        {{- $.Files.Get $path | nindent 8 }}
      {{ end }}
  crds-bases-configmaps.yaml: |-
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: {{ $name }}-crds-bases
      namespace: {{ $namespace }}
    data:
      {{ range $path, $bytes := .Files.Glob (printf "_crds/bases/**")}}
      {{ $name := base $path }}
      {{- (printf "%s: " $name) | nindent 6 }} |-
        {{- $.Files.Get $path | nindent 8 }}
      {{ end }}
  crds-patches-configmaps.yaml: |-
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: {{ $name }}-crds-patches
      namespace: {{ $namespace }}
    data:
      {{- print "webhook_in_clusterresourcebindings.yaml: " | nindent 6 }} |-
        {{- include "karmada.crd.patch.webhook.clusterresourcebinding" . | nindent 8 }}
      {{- print "webhook_in_resourcebindings.yaml: " | nindent 6 }} |-
        {{- include "karmada.crd.patch.webhook.resourcebinding" . | nindent 8 }}