{{- if .Values.istiod.istiod.enabled }}
{{- $fullName := include "cntrlmesh.fullname" . -}}
{{- $gwURL := include "cntrlmesh.istio.gwURL" . -}}
---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istiod

  namespace: external-istiod
spec:
  profile: empty
  
  #
  # https://preliminary.istio.io/latest/docs/reference/config/istio.mesh.v1alpha1/
  #
  meshConfig:
    rootNamespace: external-istiod

    trustDomain: k0s.resolvemy.host

    outboundTrafficPolicy:
      mode: ALLOW_ANY

    extensionProviders:
      - name: otel
        envoyOtelAls:
          service: otel-core.core-prod.svc.k0s.resolvemy.host
          port: 4317

      - name: 'authentik'
        envoyExtAuthzHttp:
          service: k0s-cntrl-aaa-authentik.core-prod.svc.k0s.resolvemy.host
          port: '80'
          pathPrefix: '/outpost.goauthentik.io/auth/envoy'
          headersToDownstreamOnAllow:
            - cookie
          headersToUpstreamOnAllow:
            - set-cookie
            - x-authentik-*
            - x-remote-*
          includeRequestHeadersInCheck:
            - cookie

    defaultConfig:
      discoveryAddress: {{ .Values.url }}:15012
    
      tracing:
        sampling: 0.25
        zipkin:
          address: otel-core.core-prod.svc.k0s.resolvemy.host:9411

      proxyMetadata:
        XDS_ROOT_CA: /etc/ssl/certs/ca-certificates.crt
        CA_ROOT_CA: /etc/ssl/certs/ca-certificates.crt

  components:
    pilot:
      enabled: true
      k8s:
        overlays:
        - kind: Deployment
          name: istiod
          patches:
          - path: spec.template.spec.volumes[100]
            value: |-
              name: config-volume
              configMap:
                name: istio

          - path: spec.template.spec.volumes[100]
            value: |-
              name: inject-volume
              configMap:
                name: istio-sidecar-injector

          - path: spec.template.spec.containers[0].volumeMounts[100]
            value: |-
              name: config-volume
              mountPath: /etc/istio/config

          - path: spec.template.spec.containers[0].volumeMounts[100]
            value: |-
              name: inject-volume
              mountPath: /var/lib/istio/inject
        env:

        - name: INJECTION_WEBHOOK_CONFIG_NAME
          value: ''

        - name: VALIDATION_WEBHOOK_CONFIG_NAME
          value: ''

        - name: EXTERNAL_ISTIOD
          value: 'true'

        - name: SHARED_MESH_CONFIG
          value: istio

        - name: PILOT_ENABLE_QUIC_LISTENERS
          value: 'true'

        - name: PILOT_USE_ENDPOINT_SLICE
          value: 'true'
        
        - name: ISTIO_GATEWAY_STRIP_HOST_PORT
          value: 'true'

        - name: BOOTSTRAP_XDS_AGENT
          value: 'true'

        - name: PROXY_CONFIG_XDS_AGENT
          value: 'true'

  values:
    global:
      #################
      #               #
      #     MAIN      #
      #               #
      #################

      #
      # Multi Cluster
      #
      meshID: mesh1

      multiCluster:
        enabled: true
        clusterName: cntrlplane
        includeEnvoyFilter: true


      network: network1

    # meshNetworks:
    #   network1:
    #     endpoints:
    #     - fromCidr: "192.168.0.1/24"
    #     gateways:
    #     - address: 1.1.1.1
    #       port: 80

    #   network2:
    #     endpoints:
    #     - fromRegistry: reg1
    #     gateways:
    #     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
    #       port: 443

      remotePilotAddress: {{ .Values.url }}

       
      ##########################
      #
      #          Misc
      #
      ###########################

      istioNamespace: external-istiod

      #
      # Controls whether the server-side validation is enabled
      #
      configValidation: true

      ################
      #   Webhooks   #
      ################

      operatorManageWebhooks: true

      ###############
      #   Logging   #
      ###############
      logAsJson: true

      #
      # TLS
      #
      caAddress: {{ .Values.url }}:15012

      #pilotCertProvider: kubernetes

      


      proxy:
        clusterDomain: k0s.resolvemy.host

        resources:
          requests:
            cpu: 64m
            memory: 32Mi
          limits: null

{{- end }}
