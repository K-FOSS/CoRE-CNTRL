{{- $fullName := include "kubernetes.fullname" . -}}
{{- $ipAddress := include "kubernetes.getKonnectivityAddress" . -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $fullName }}-apiserver-config

data:
  auth-config.yaml: |
    apiVersion: apiserver.config.k8s.io/v1alpha1
    kind: AuthenticationConfiguration
    jwt:
      - issuer:
          url: https://idp.mylogin.space/application/o/che/
          audiences:
            - <path:CORE0_SITE1/data/IDE/Che/Authentik#ClientID>
        claimMappings:
          username:
            expression: 'claims.email'
          groups:
            expression: 'claims.groups'
          uid:
            expression: 'claims.sub'
        userValidationRules:
          - expression: "!user.username.startsWith('system:')" # the expression will evaluate to true, so validation will succeed.
            message: 'username cannot used reserved system: prefix'
      - issuer:
          url: https://idp.mylogin.space/application/o/headlamp/
          audiences:
            - <path:CORE0_SITE1/data/Headlamp/OIDC#ClientID>
        claimMappings:
          username:
            expression: 'claims.email'
          groups:
            expression: 'claims.groups'
          uid:
            expression: 'claims.sub'
        userValidationRules:
          - expression: "!user.username.startsWith('system:')" # the expression will evaluate to true, so validation will succeed.
            message: 'username cannot used reserved system: prefix'
  {{- if .Values.kubernetes.apiServer.tracing.enabled }}
  tracing.yaml: |
    apiVersion: apiserver.config.k8s.io/v1alpha1
    kind: TracingConfiguration
    {{ with .Values.kubernetes.apiServer.tracing }}
    endpoint: {{ .host }}:{{ .port }}
    {{- end }}
    samplingRatePerMillion: 5000
  {{- end }}

  egress-selector-configuration.yaml: |
    apiVersion: apiserver.k8s.io/v1alpha1

    kind: EgressSelectorConfiguration

    egressSelections:
      - name: cluster
        connection:
          proxyProtocol: HTTPConnect
          transport:
            tcp:
              url: https://{{ $ipAddress }}:{{ .Values.kubernetes.konnectivityServer.service.ports.server }}
              TLSConfig:
                caBundle: /pki/konnectivity-client/ca.crt
                clientKey: /pki/konnectivity-client/tls.key
                clientCert: /pki/konnectivity-client/tls.crt


      - name: controlplane
        connection:
          proxyProtocol: Direct

      - name: etcd
        connection:
          proxyProtocol: Direct

