{{- if .Values.kubernetes.apiServer.enabled }}
{{- $fullName := include "kubernetes.fullname" . -}}
{{- $apiAddress := include "kubernetes.getAPIHostnamePort" . -}}
{{- $certName := include "kubernetes.certname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: '{{ $fullName }}-apiserver'
    test-name: '{{ $fullName }}-apiserver'

  name: '{{ $fullName }}-apiserver'
  namespace: core-prod
spec:
  replicas: {{ .Values.kubernetes.apiServer.replicaCount }}

  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app: '{{ $fullName }}-apiserver'

  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

    type: RollingUpdate

  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/APIServerConfig.yaml") . | sha256sum }}

      labels:
        app: '{{ $fullName }}-apiserver'

    spec:
      {{- with .Values.kubernetes.apiServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubernetes.apiServer.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: '{{ $fullName }}-apiserver'
                topologyKey: kubernetes.io/hostname
              weight: 1

      automountServiceAccountToken: false

      containers:
        - name: kube-apiserver

          {{- with .Values.kubernetes.apiServer.image }}
          image: '{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}'
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}

          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 15
            timeoutSeconds: 15

          command:
            - kube-apiserver

            - --logging-format=json
            - --v=0


            - --allow-privileged=true


            - --authorization-mode=Node,RBAC

            - --bind-address=0.0.0.0

            - --client-ca-file=/pki/apiserver-server/ca.crt
            
            - --enable-admission-plugins=NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook
            - --enable-bootstrap-token-auth=true

            - --enable-aggregator-routing

            - --etcd-cafile=/pki/apiserver-etcd-client/ca.crt
            - --etcd-certfile=/pki/apiserver-etcd-client/tls.crt
            - --etcd-keyfile=/pki/apiserver-etcd-client/tls.key
            - >-
              --etcd-servers=https://infra1-dc1-infra-k0s-k8s-kubernetes-etcd-0.infra1-dc1-infra-k0s-k8s-kubernetes-etcd.core-prod.svc.cluster.local:2379,https://infra1-dc1-infra-k0s-k8s-kubernetes-etcd-1.infra1-dc1-infra-k0s-k8s-kubernetes-etcd.core-prod.svc.cluster.local:2379

            - --insecure-port=0

            - --kubelet-timeout=30s
            - --kubelet-preferred-address-types=InternalIP

            - --kubelet-client-certificate=/pki/apiserver-kubelet-client/tls.crt
            - --kubelet-client-key=/pki/apiserver-kubelet-client/tls.key


            - --proxy-client-cert-file=/pki/front-proxy-client/tls.crt
            - --proxy-client-key-file=/pki/front-proxy-client/tls.key
            
            
            - --requestheader-allowed-names={{ $certName }}-front-proxy-client
            - --requestheader-client-ca-file=/pki/front-proxy-client/ca.crt
            - --requestheader-extra-headers-prefix=X-Remote-Extra-
            - --requestheader-group-headers=X-Remote-Group
            - --requestheader-username-headers=X-Remote-User
            
            
            - --secure-port=6443

            - --service-account-key-file=/pki/sa/tls.crt

            - --service-cluster-ip-range={{ .Values.kubernetes.networking.serviceSubnet }}
            
            - --tls-cert-file=/pki/apiserver-server/tls.crt
            - --tls-private-key-file=/pki/apiserver-server/tls.key
            
            - --egress-selector-config-file=/etc/kubernetes/egress-selector-configuration.yaml
            
            - --service-account-issuer=https://kubernetes.default.svc.k0s.resolvemy.host
            - '--service-account-signing-key-file=/pki/sa/tls.key'

            {{- if not (hasKey .Values.kubernetes.apiServer.extraArgs "advertise-address") }}
            {{- with .Values.kubernetes.apiServer.service.loadBalancerIP }}
            - --advertise-address={{ . }}
            {{- end }}
            {{- end }}

            - --feature-gates=MixedProtocolLBService=true
            - --max-mutating-requests-inflight=400
            - --max-requests-inflight=800
          ports:
            - containerPort: 6443
              name: https
              protocol: TCP

          resources:
            requests:
              memory: 12G
              cpu: 0.85
            limits:
              memory: 12G

          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

          volumeMounts:
            - mountPath: /etc/kubernetes
              name: apiserver-config

            - mountPath: /pki/front-proxy-client
              name: pki-front-proxy-client

            - mountPath: /pki/apiserver-server
              name: pki-apiserver-server

            - mountPath: /pki/apiserver-etcd-client
              name: pki-apiserver-etcd-client

            - mountPath: /pki/apiserver-kubelet-client
              name: pki-apiserver-kubelet-client

            - mountPath: /pki/sa
              name: pki-sa

            - mountPath: /run/konnectivity-server
              name: konnectivity-uds

            - mountPath: /pki/konnectivity-client
              name: pki-konnectivity-client

      dnsConfig:
        nameservers:
          - 172.18.0.10

        options:
          - name: ndots
            value: '5'

        searches:
          - k0s.resolvemy.host
          - svc.k0s.resolvemy.host

      dnsPolicy: None



      schedulerName: default-scheduler

      securityContext:
        seccompProfile:
          type: RuntimeDefault

      terminationGracePeriodSeconds: 30

      volumes:
        - name: apiserver-config
          configMap:
            defaultMode: 420
            name: '{{ $fullName }}-apiserver-config'

          

        - name: pki-front-proxy-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-front-proxy-client'


        - name: pki-apiserver-server
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-server'


        - name: pki-apiserver-etcd-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-etcd-client'


        - name: pki-apiserver-kubelet-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-kubelet-client'


        - name: pki-sa
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-sa'


        - name: pki-konnectivity-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-konnectivity-client'


        - name: pki-apiserver
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-server'


        - name: pki-konnectivity-server-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-konnectivity-server-client'


        - name: konnectivity-uds
          emptyDir: {}


        - name: kubeconfig
          configMap:
            defaultMode: 420
            name: '{{ $fullName }}-konnectivity-server-conf'
          
{{- end }}
