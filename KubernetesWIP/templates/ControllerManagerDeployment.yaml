{{- if .Values.kubernetes.controllerManager.enabled }}
{{- $fullName := include "kubernetes.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: '{{ $fullName }}-controller-manager'
    {{- with .Values.kubernetes.controllerManager.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

  {{- with .Values.kubernetes.controllerManager.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  name: '{{ $fullName }}-controller-manager'

spec:
  replicas: {{ .Values.kubernetes.controllerManager.replicaCount }}

  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app: '{{ $fullName }}-controller-manager'

  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: '{{ $fullName }}-controller-manager'
        {{- with .Values.kubernetes.controllerManager.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      {{- with .Values.kubernetes.controllerManager.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.kubernetes.controllerManager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kubernetes.controllerManager.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: '{{ $fullName }}-controller-manager'
                topologyKey: kubernetes.io/hostname
              weight: 1

      automountServiceAccountToken: false

      containers:
        - name: kube-controller-manager

          image: k8s.gcr.io/kube-controller-manager:v1.23.6
          imagePullPolicy: IfNotPresent

          livenessProbe:
            failureThreshold: 8

            httpGet:
              path: /healthz
              port: {{ .Values.kubernetes.controllerManager.port }}
              scheme: HTTPS

            initialDelaySeconds: 15
            timeoutSeconds: 15

          command:
            - kube-controller-manager

            - --logging-format=json
            - --v=0


            - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
            - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf


            - --bind-address=0.0.0.0

            - --client-ca-file=/pki/ca/tls.crt


            - --cluster-name=kubernetes


            - --cluster-signing-cert-file=/pki/ca/tls.crt
            - --cluster-signing-key-file=/pki/ca/tls.key


            - --controllers=*,bootstrapsigner,tokencleaner


            - --kubeconfig=/etc/kubernetes/controller-manager.conf


            - --leader-elect=false


            - --requestheader-client-ca-file=/pki/front-proxy-client/tls.crt


            - --root-ca-file=/pki/ca/tls.crt


            - --secure-port={{ .Values.kubernetes.controllerManager.port }}


            - --service-account-private-key-file=/pki/sa/tls.key


            - --use-service-account-credentials=true


            - --tls-cert-file=/pki/controller-manager-server/tls.crt            
            - --tls-private-key-file=/pki/controller-manager-server/tls.key


            - --service-cluster-ip-range={{ .Values.kubernetes.networking.serviceSubnet }}
            

            {{ with .Values.kubernetes.networking.podSubnet }}
            - --allocate-node-cidrs=true
            - --cluster-cidr={{ . }}
            {{- end }}
            
            - '--feature-gates=MixedProtocolLBService=true'

          ports:
            - containerPort: {{ .Values.kubernetes.controllerManager.port }
              name: https
              protocol: TCP

          resources:
            requests:
              cpu: 256m
              memory: 256M

          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

          volumeMounts:
            - mountPath: /etc/kubernetes/
              name: kubeconfig
              readOnly: true

            - mountPath: /pki/controller-manager-server
              name: pki-controller-manager-server

            - mountPath: /pki/controller-manager-client
              name: pki-controller-manager-client

            - mountPath: /pki/ca
              name: pki-ca

            - mountPath: /pki/front-proxy-client
              name: pki-front-proxy-client

            - mountPath: /pki/sa
              name: pki-sa

        {{- with .Values.kubernetes.controllerManager.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      dnsPolicy: None

      dnsConfig:
        nameservers:
          - 172.18.0.10

        options:
          - name: ndots
            value: '5'

        searches:
          - k0s.resolvemy.host
          - svc.k0s.resolvemy.host

      restartPolicy: Always

      schedulerName: default-scheduler

      securityContext:
        seccompProfile:
          type: RuntimeDefault

      terminationGracePeriodSeconds: 30

      volumes:
        - name: kubeconfig
          configMap:
            defaultMode: 420
            name: '{{ $fullName }}-controller-manager-conf'

        - name: pki-controller-manager-server
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-controller-manager-server'

        - name: pki-controller-manager-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-controller-manager-client'

        - name: pki-ca
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-ca'

        - name: pki-front-proxy-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-front-proxy-client'

        - name: pki-sa
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-sa'
{{- end }}
