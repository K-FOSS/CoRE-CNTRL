{{- if .Values.kubernetes.konnectivityServer.enabled }}
{{- $fullName := include "kubernetes.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: '{{ $fullName }}-konnectivity-server'

  name: '{{ $fullName }}-konnectivity-server'

spec:
  replicas: {{ .Values.kubernetes.konnectivityServer.replicaCount }}

  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app: '{{ $fullName }}-konnectivity-server'

  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: '{{ $fullName }}-konnectivity-server'

    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: '{{ $fullName }}-konnectivity-server'
                topologyKey: kubernetes.io/hostname
              weight: 1

      automountServiceAccountToken: false
      containers:
        - name: konnectivity-server

          image: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-server:v0.0.30
          imagePullPolicy: IfNotPresent

          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: health
              scheme: HTTP

            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60

          command:
            - /proxy-server

            - --logtostderr=true

            - --server-count=1

            - --server-id=$(POD_NAME)

            - --cluster-cert=/pki/apiserver/tls.crt
            - --cluster-key=/pki/apiserver/tls.key

            - --mode=http-connect
            - --server-port={{ .Values.kubernetes.konnectivityServer.ports.server }}

            - --server-ca-cert=/pki/konnectivity-server/ca.crt
            - --server-cert=/pki/konnectivity-server/tls.crt
            - --server-key=/pki/konnectivity-server/tls.key

            - --agent-port={{ .Values.kubernetes.konnectivityServer.ports.agent }}
            - --admin-port={{ .Values.kubernetes.konnectivityServer.ports.admin }}
            - --health-port={{ .Values.kubernetes.konnectivityServer.ports.health }}

            - --agent-namespace=kube-system
            - --agent-service-account=konnectivity-agent
            - --kubeconfig=/etc/kubernetes/konnectivity-server.conf
            - --authentication-audience=system:konnectivity-server

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          
          ports:
            - name: server
            
              containerPort: {{ .Values.kubernetes.konnectivityServer.ports.server }}
              
              protocol: TCP

            - name: agent
              containerPort: {{ .Values.kubernetes.konnectivityServer.ports.agent }}
              
              protocol: TCP

            - name: admin
              containerPort: {{ .Values.kubernetes.konnectivityServer.ports.admin }}
              
              protocol: TCP

            - name: health
              containerPort: {{ .Values.kubernetes.konnectivityServer.ports.health }}
              
              protocol: TCP

          resources:
            requests:
              cpu: 100m
              memory: 128Mi

          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

          volumeMounts:
            - mountPath: /pki/apiserver
              name: pki-apiserver

            - mountPath: /pki/konnectivity-server
              name: pki-konnectivity-server

            - mountPath: /pki/konnectivity-server-client
              name: pki-konnectivity-server-client

            - mountPath: /etc/kubernetes/
              name: kubeconfig
              readOnly: true

        {{- with .Values.kubernetes.konnectivityServer.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      dnsConfig:
        nameservers:
          - 172.18.0.10
        options:
          - name: ndots
            value: '5'
        searches:
          - k0s.resolvemy.host
          - svc.k0s.resolvemy.host

      dnsPolicy: None

      restartPolicy: Always

      schedulerName: default-scheduler

      securityContext:
        seccompProfile:
          type: RuntimeDefault

      terminationGracePeriodSeconds: 30

      volumes:
        - configMap:
            defaultMode: 420
            name: '{{ $fullName }}-apiserver-config'
          name: apiserver-config

        - name: pki-front-proxy-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-front-proxy-client'

        - name: pki-apiserver-server
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-server'

        - name: pki-apiserver-etcd-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-etcd-client'

        - name: pki-apiserver-kubelet-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-kubelet-client'

        - name: pki-sa
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-sa'

        - name: pki-konnectivity-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-konnectivity-client'

        - name: pki-apiserver
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-apiserver-server'

        - name: pki-konnectivity-server-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-konnectivity-server-client'

        - emptyDir: {}
          name: konnectivity-uds

        - configMap:
            defaultMode: 420
            name: '{{ $fullName }}-konnectivity-server-conf'
          name: kubeconfig

        - secret:
            secretName: '{{ $fullName }}-pki-konnectivity-server'
          name: pki-konnectivity-server
{{- end -}}
