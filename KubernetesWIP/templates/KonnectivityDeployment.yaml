apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: infra1-dc1-infra-k0s-k8s-kubernetes-konnectivity
  name: infra1-dc1-infra-k0s-k8s-kubernetes-konnectivity
  namespace: core-prod
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: infra1-dc1-infra-k0s-k8s-kubernetes-konnectivity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: bd761de6a12149a98b3e1002ede7f71fd1e7db92bbb801c72bedc9c366db6122
      creationTimestamp: null
      labels:
        app: infra1-dc1-infra-k0s-k8s-kubernetes-konnectivity
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: infra1-dc1-infra-k0s-k8s-kubernetes-konnectivity
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - command:
            - /proxy-server
            - '--logtostderr=true'
            - '--v=7'
            - '--server-count=1'
            - '--server-id=$(POD_NAME)'
            - '--cluster-cert=/pki/apiserver/tls.crt'
            - '--cluster-key=/pki/apiserver/tls.key'
            - --mode=http-connect
            - --server-port=
            - --server-ca-cert=/pki/konnectivity-server/ca.crt
            - --server-cert=/pki/konnectivity-server/tls.crt
            - --server-key=/pki/konnectivity-server/tls.key
            - '--agent-port=8132'
            - '--admin-port=8133'
            - '--health-port=8134'
            - '--agent-namespace=kube-system'
            - '--agent-service-account=konnectivity-agent'
            - '--kubeconfig=/etc/kubernetes/konnectivity-server.conf'
            - '--authentication-audience=system:konnectivity-server'
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: 'us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-server:v0.0.30'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 8134
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-server
          ports:
            - containerPort: 8131
              name: server
              protocol: TCP
            - containerPort: 8132
              name: agent
              protocol: TCP
            - containerPort: 8133
              name: admin
              protocol: TCP
            - containerPort: 8134
              name: health
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /pki/apiserver
              name: pki-apiserver
            - mountPath: /run/konnectivity-server
              name: konnectivity-uds
            - mountPath: /pki/konnectivity-server-client
              name: pki-konnectivity-server-client
            - mountPath: /etc/kubernetes/
              name: kubeconfig
              readOnly: true
      dnsConfig:
        nameservers:
          - 172.18.0.10
        options:
          - name: ndots
            value: '5'
        searches:
          - k0s.resolvemy.host
          - svc.k0s.resolvemy.host
      dnsPolicy: None
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: infra1-dc1-infra-k0s-k8s-kubernetes-apiserver-config
          name: apiserver-config
        - name: pki-front-proxy-client
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-front-proxy-client
        - name: pki-apiserver-server
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-apiserver-server
        - name: pki-apiserver-etcd-client
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-apiserver-etcd-client
        - name: pki-apiserver-kubelet-client
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-apiserver-kubelet-client
        - name: pki-sa
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-sa
        - name: pki-konnectivity-client
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-konnectivity-client
        - name: pki-apiserver
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-apiserver-server
        - name: pki-konnectivity-server-client
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-konnectivity-server-client
        - emptyDir: {}
          name: konnectivity-uds
        - configMap:
            defaultMode: 420
            name: infra1-dc1-infra-k0s-k8s-kubernetes-konnectivity-server-conf
          name: kubeconfig
