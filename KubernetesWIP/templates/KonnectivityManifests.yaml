{{- if or .Values.kubernetes.konnectivityServer.enabled .Values.kubernetes.konnectivityAgent.enabled }}
{{- $fullName := include "kubernetes.fullname" . -}}
{{- $ipAddress := include "kubernetes.getKonnectivityAddress" . -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $fullName }}-konnectivity-manifests



data:
  konnectivity-agent-deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: konnectivity-agent
      namespace: kube-system

      labels:
        addonmanager.kubernetes.io/mode: Reconcile
        k8s-app: konnectivity-agent
        {{- with .Values.kubernetes.konnectivityAgent.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      
      {{- with .Values.kubernetes.konnectivityAgent.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


    spec:
      replicas: {{ .Values.kubernetes.konnectivityAgent.replicaCount }}

      selector:
        matchLabels:
          k8s-app: konnectivity-agent

      template:
        metadata:
          labels:
            k8s-app: konnectivity-agent
            {{- with .Values.kubernetes.konnectivityAgent.podLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          
          {{- with .Values.kubernetes.konnectivityAgent.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}

        spec:
          {{- with .Values.kubernetes.konnectivityAgent.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          hostNetwork: {{ .Values.kubernetes.konnectivityAgent.hostNetwork }}

          securityContext:
            seccompProfile:
              type: RuntimeDefault

          priorityClassName: system-cluster-critical

          tolerations:
            - key: "CriticalAddonsOnly"
              operator: "Exists"
          {{- with .Values.kubernetes.konnectivityAgent.tolerations }}
            {{- toYaml . | nindent 12 }}
          {{- end }}

          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: "kubernetes.io/hostname"
                    labelSelector:
                      matchLabels:
                        k8s-app: konnectivity-agent

          {{- with .Values.kubernetes.konnectivityServer.image.pullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          containers:
            - name: konnectivity-agent
              
              {{- with .Values.kubernetes.konnectivityAgent.image }}
              image: "{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}"
              imagePullPolicy: {{ .pullPolicy }}
              {{- end }}
              
              command:
                - /proxy-agent
                - --logtostderr=true
                - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token

                - --admin-server-port={{ .Values.kubernetes.konnectivityAgent.ports.admin }}
                - --health-server-port={{ .Values.kubernetes.konnectivityAgent.ports.health }}
                - --proxy-server-host={{ $ipAddress }}
                - --proxy-server-port={{ .Values.kubernetes.konnectivityServer.ports.agent }}

                {{- range $key, $value := .Values.kubernetes.konnectivityAgent.extraArgs }}
                - --{{ $key }}={{ $value }}
                {{- end }}

              ports:
                - name: admin
                  containerPort: {{ .Values.kubernetes.konnectivityAgent.ports.admin }}

                - name: health
                  containerPort: {{ .Values.kubernetes.konnectivityAgent.ports.health }}
                  

              volumeMounts:
                - mountPath: /var/run/secrets/tokens
                  name: konnectivity-agent-token

              livenessProbe:
                httpGet:
                  path: /healthz
                  port: health
                  scheme: HTTP
                initialDelaySeconds: 15
                timeoutSeconds: 15

          serviceAccountName: konnectivity-agent

          volumes:
            - name: konnectivity-agent-token
              projected:
                sources:
                - serviceAccountToken:
                    path: konnectivity-agent-token
                    audience: system:konnectivity-server

  konnectivity-agent-rbac.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: konnectivity-agent
      namespace: kube-system
      labels:
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile

  konnectivity-server-rbac.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: system:konnectivity-server
      labels:
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: system:konnectivity-server
{{- end }}
