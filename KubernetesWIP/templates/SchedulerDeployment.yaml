{{- if .Values.kubernetes.scheduler.enabled }}
{{- $fullName := include "kubernetes.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: '{{ $fullName }}-scheduler'
  
  name: '{{ $fullName }}-scheduler'

spec:
  replicas: {{ .Values.kubernetes.scheduler.replicaCount }}

  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10

  selector:
    matchLabels:
      app: '{{ $fullName }}-scheduler'

  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: '{{ $fullName }}-scheduler'

    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: '{{ $fullName }}-scheduler'
                topologyKey: kubernetes.io/hostname
              weight: 1

      automountServiceAccountToken: false

      containers:
        - name: kube-scheduler

          {{- with .Values.kubernetes.scheduler.image }}
          image: '{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}'
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}

          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 10259
              scheme: HTTPS

            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15

          command:
            - kube-scheduler

            - --logging-format=json

            - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
            - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf

            - --bind-address=0.0.0.0

            - --kubeconfig=/etc/kubernetes/scheduler.conf

            - --leader-elect=true

            - --secure-port=10259

            - --tls-cert-file=/pki/scheduler-server/tls.crt

            - --tls-private-key-file=/pki/scheduler-server/tls.key
          
          ports:
            - containerPort: 10259
              name: https
              protocol: TCP

          resources:
            {{- toYaml .Values.kubernetes.scheduler.resources | nindent 12 }}

          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

          volumeMounts:
            - mountPath: /etc/kubernetes/
              name: kubeconfig
              readOnly: true

            - mountPath: /pki/scheduler-server
              name: pki-scheduler-server

            - mountPath: /pki/scheduler-client
              name: pki-scheduler-client

            {{- with .Values.kubernetes.scheduler.extraVolumeMounts }}
            {{- toYaml . | nindent 8 }}
            {{- end }}

      dnsPolicy: ClusterFirst

      restartPolicy: Always

      schedulerName: default-scheduler

      securityContext:
        seccompProfile:
          type: RuntimeDefault

      terminationGracePeriodSeconds: 30

      volumes:
        - configMap:
            defaultMode: 420
            name: '{{ $fullName }}-scheduler-conf'
          name: kubeconfig

        - name: pki-scheduler-server
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-scheduler-server'

        - name: pki-scheduler-client
          secret:
            defaultMode: 420
            secretName: '{{ $fullName }}-pki-scheduler-client'

        {{- with .Values.kubernetes.scheduler.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
