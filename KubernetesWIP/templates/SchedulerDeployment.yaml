apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: infra1-dc1-infra-k0s-k8s-kubernetes-scheduler
  
  name: infra1-dc1-infra-k0s-k8s-kubernetes-scheduler
  namespace: core-prod

spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10

  selector:
    matchLabels:
      app: infra1-dc1-infra-k0s-k8s-kubernetes-scheduler

  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: infra1-dc1-infra-k0s-k8s-kubernetes-scheduler

    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: infra1-dc1-infra-k0s-k8s-kubernetes-scheduler
                topologyKey: kubernetes.io/hostname
              weight: 1

      automountServiceAccountToken: false

      containers:
        - name: kube-scheduler

          image: 'k8s.gcr.io/kube-scheduler:v1.23.6'
          imagePullPolicy: IfNotPresent

          command:
            - kube-scheduler
            - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
            - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
            - --bind-address=0.0.0.0
            - --kubeconfig=/etc/kubernetes/scheduler.conf
            - --leader-elect=true
            - --secure-port=10259
            - --tls-cert-file=/pki/scheduler-server/tls.crt
            - --tls-private-key-file=/pki/scheduler-server/tls.key
            - '--feature-gates=MixedProtocolLBService=true'

          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 10259
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          
          resources:
            requests:
              cpu: 100m
              memory: 256Mi

          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

          volumeMounts:
            - mountPath: /etc/kubernetes/
              name: kubeconfig
              readOnly: true

            - mountPath: /pki/scheduler-server
              name: pki-scheduler-server

            - mountPath: /pki/scheduler-client
              name: pki-scheduler-client

      dnsPolicy: ClusterFirst

      restartPolicy: Always

      schedulerName: default-scheduler

      securityContext:
        seccompProfile:
          type: RuntimeDefault

      terminationGracePeriodSeconds: 30

      volumes:
        - configMap:
            defaultMode: 420
            name: infra1-dc1-infra-k0s-k8s-kubernetes-scheduler-conf
          name: kubeconfig

        - name: pki-scheduler-server
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-scheduler-server

        - name: pki-scheduler-client
          secret:
            defaultMode: 420
            secretName: infra1-dc1-infra-k0s-k8s-kubernetes-pki-scheduler-client
